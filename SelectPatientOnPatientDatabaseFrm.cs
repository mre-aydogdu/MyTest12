///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace RX_coDiagnostiX_Library.PatientDatabase
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SelectPatientOnPatientDatabaseFrm recording.
    /// </summary>
    [TestModule("d45a9fd4-f9a0-4e38-ac4f-a338b08678b6", ModuleType.Recording, 1)]
    public partial class SelectPatientOnPatientDatabaseFrm : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::RX_coDiagnostiX_Library.RX_coDiagnostiXRepository repository.
        /// </summary>
        public static global::RX_coDiagnostiX_Library.RX_coDiagnostiXRepository repo = global::RX_coDiagnostiX_Library.RX_coDiagnostiXRepository.Instance;

        static SelectPatientOnPatientDatabaseFrm instance = new SelectPatientOnPatientDatabaseFrm();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SelectPatientOnPatientDatabaseFrm()
        {
            QuickSearchPatient = "{399D8CF9-48B0-43F0-B69A-D03505C36F4E}";
            ValidatePatientName = "Miller Emma";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SelectPatientOnPatientDatabaseFrm Instance
        {
            get { return instance; }
        }

#region Variables

        string _QuickSearchPatient;

        /// <summary>
        /// Gets or sets the value of variable QuickSearchPatient.
        /// </summary>
        [TestVariable("b03ef6c2-f29f-46ab-beec-4a3f6589493c")]
        public string QuickSearchPatient
        {
            get { return _QuickSearchPatient; }
            set { _QuickSearchPatient = value; }
        }

        string _ValidatePatientName;

        /// <summary>
        /// Gets or sets the value of variable ValidatePatientName.
        /// </summary>
        [TestVariable("af34e22f-35f3-4ec1-9f41-4fa8690b7d9b")]
        public string ValidatePatientName
        {
            get { return _ValidatePatientName; }
            set { _ValidatePatientName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to exist. Associated repository item: 'Forms.frmPatientDatabase'", repo.Forms.frmPatientDatabase.SelfInfo, new ActionTimeout(5000), new RecordItemIndex(0));
            repo.Forms.frmPatientDatabase.SelfInfo.WaitForExists(5000);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Forms.frmPatientDatabase'.", repo.Forms.frmPatientDatabase.SelfInfo, new RecordItemIndex(1));
            Validate.Exists(repo.Forms.frmPatientDatabase.SelfInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Forms.frmPatientDatabase.PanelMainNormal.Controls.EditFilterPatient' at 73;9.", repo.Forms.frmPatientDatabase.PanelMainNormal.Controls.EditFilterPatientInfo, new RecordItemIndex(2));
            repo.Forms.frmPatientDatabase.PanelMainNormal.Controls.EditFilterPatient.Click("73;9");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$QuickSearchPatient' with focus on 'Forms.frmPatientDatabase.PanelMainNormal.Controls.EditFilterPatient'.", repo.Forms.frmPatientDatabase.PanelMainNormal.Controls.EditFilterPatientInfo, new RecordItemIndex(3));
            //repo.Forms.frmPatientDatabase.PanelMainNormal.Controls.EditFilterPatient.PressKeys(QuickSearchPatient);
            //Delay.Milliseconds(0);
            
            // we have to use SetValue instead of KeySeq, because FilterData with "%&{}..." are not direct keyboard keys. they need SHIFT / STRG / ... additionally
            Report.Log(ReportLevel.Info, "Set value", "we have to use SetValue instead of KeySeq, because FilterData with \"%&{}...\" are not direct keyboard keys. they need SHIFT / STRG / ... additionally\r\nSetting attribute Text to '$QuickSearchPatient' on item 'Forms.frmPatientDatabase.PanelMainNormal.Controls.EditFilterPatient'.", repo.Forms.frmPatientDatabase.PanelMainNormal.Controls.EditFilterPatientInfo, new RecordItemIndex(4));
            repo.Forms.frmPatientDatabase.PanelMainNormal.Controls.EditFilterPatient.Element.SetAttributeValue("Text", QuickSearchPatient);
            Delay.Milliseconds(0);
            
            // wait short, for filtering event
            Report.Log(ReportLevel.Info, "Delay", "wait short, for filtering event\r\nWaiting for 1s.", new RecordItemIndex(5));
            Delay.Duration(1000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Forms.frmPatientDatabase.PanelMainNormal.Controls.TreeListPatients' at 46;41.", repo.Forms.frmPatientDatabase.PanelMainNormal.Controls.TreeListPatientsInfo, new RecordItemIndex(6));
            //repo.Forms.frmPatientDatabase.PanelMainNormal.Controls.TreeListPatients.Click("46;41");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Forms.frmPatientDatabase.PanelMainNormal.Controls.TreeListPatients' at 127;67.", repo.Forms.frmPatientDatabase.PanelMainNormal.Controls.TreeListPatientsInfo, new RecordItemIndex(7));
            repo.Forms.frmPatientDatabase.PanelMainNormal.Controls.TreeListPatients.Click("127;67");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$ValidatePatientName) on item 'Forms.frmPatientDatabase.PanelMainNormal.Labels.labelPatientName'.", repo.Forms.frmPatientDatabase.PanelMainNormal.Labels.labelPatientNameInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.Forms.frmPatientDatabase.PanelMainNormal.Labels.labelPatientNameInfo, "Text", ValidatePatientName);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
